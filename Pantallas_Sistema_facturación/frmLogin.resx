<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2ZmLINZQwAAAAABJRU5ErkJggg==
</value>
  </data>
</root>